## 1. Assignment A – WebGrab Client (console tool)

Program in C++20 a console application "webgrab-client", which serves as the front-end **client** for the WebGrab service.

After launch, it reads the command line, converts entered commands into binary messages according to the attached FlatBuffers schema `webgrab.fbs` and sends them to a TCP socket (host:port passed as CLI parameters).

The client maintains a local **queue of outgoing requests** with options:

* `download <url>` – queues a new DownloadRequest.

* `status <session-id>` – queues a DownloadStatusRequest.

* `abort  <session-id>` – queues a DownloadAbortRequest.

* `quit` – sends ShutdownRequest and terminates the application.

Upon receiving a response (DownloadResponse, DownloadStatusResponse, …) the client prints a brief message to stdout.

### Functional Requirements

1. Commands can be chained interactively; the assignment ignores empty lines and comments `#`.

2. Sending and receiving occurs **synchronously** – the client waits for a response before accepting further input.

3. The client must validate URL syntax and numeric IDs before creating a binary message.

4. Transport protocol: length-prefixed frame (uint32 network-byte-order + payload).

5. Process exit codes: 0 = OK, ≠0 = connection error or invalid input.

### Provided Artifacts

* `webgrab.fbs` – already contains definitions:

  ```
  table DownloadRequest   { url:string; }
  table DownloadResponse  { sessionId:uint32; }
  table DownloadStatusRequest  { sessionId:uint32; }
  table DownloadStatusResponse { status:string; }
  table DownloadAbortRequest   { sessionId:uint32; }
  table ShutdownRequest { }
  ```

* Build script `CMakeLists.txt`.

* README with usage example.