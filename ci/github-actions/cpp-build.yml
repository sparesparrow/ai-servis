name: C++ Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'platforms/cpp/**'
      - 'conanfile.py'
      - 'profiles/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'platforms/cpp/**'
      - 'conanfile.py'
      - 'profiles/**'

jobs:
  build-cpp:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: ubuntu-latest, arch: x86_64, profile: linux-release, conan_arch: x86_64 }
          - { runner: ubuntu-20.04, arch: arm64, profile: linux-arm64, conan_arch: armv8 }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Conan
        run: |
          pip install conan
          conan profile detect --force

      - name: Cache Conan packages
        uses: actions/cache@v3
        with:
          path: ~/.conan
          key: ${{ runner.os }}-conan-${{ matrix.arch }}-${{ hashFiles('conanfile.py', 'profiles/${{ matrix.profile }}') }}
          restore-keys: |
            ${{ runner.os }}-conan-${{ matrix.arch }}-

      - name: Install dependencies with Conan
        run: |
          cd platforms/cpp
          conan install ../.. --profile ../../profiles/${{ matrix.profile }} --build missing

      - name: Configure CMake
        run: |
          cd platforms/cpp
          cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cd platforms/cpp
          cmake --build build -j$(nproc)

      - name: Run tests (if available)
        run: |
          cd platforms/cpp
          # Add test execution here when tests are implemented
          echo "Tests not yet implemented"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cpp-${{ matrix.arch }}-binaries
          path: |
            platforms/cpp/build/hardware-server
            platforms/cpp/build/mcp-server
            platforms/cpp/build/webgrab-client
            platforms/cpp/build/webgrab-server

      - name: Test basic functionality
        run: |
          cd platforms/cpp/build
          # Test that binaries exist and are executable
          ls -la hardware-server mcp-server
          file hardware-server mcp-server
