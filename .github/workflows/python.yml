name: Python CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.py'
      - 'requirements*.txt'
      - 'orchestrator-config.yaml'
      - 'tests/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.py'
      - 'requirements*.txt'
      - 'orchestrator-config.yaml'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest flake8 mypy jsonschema pyyaml

      - name: Lint (flake8)
        run: flake8 .

      - name: Type check (mypy)
        run: mypy --ignore-missing-imports .

      - name: Run unit tests
        run: pytest -q

      - name: Validate orchestrator config against schema
        run: |
          python - <<'PY'
          import json, yaml, sys
          from jsonschema import validate
          with open('contracts/config.schema.json') as f:
              schema = json.load(f)
          with open('orchestrator-config.yaml') as f:
              data = yaml.safe_load(f)
          validate(instance=data, schema=schema)
          print('Config validation: OK')
          PY

