name: Android Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'android/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'android/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build Android (Dockerized)
      run: |
        cd android/tools
        chmod +x build-in-docker.sh
        ./build-in-docker.sh --task assembleDebug
        
    - name: Validate APK
      run: |
        cd android/tools
        chmod +x validate-apk.sh
        ./validate-apk.sh | cat
        
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: ai-servis-app
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Prepare signing configuration
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Preparing keystore..."
        mkdir -p android/keystore
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/keystore/release.keystore
        cat > android/keystore.properties <<'EOF'
        storeFile=android/keystore/release.keystore
        storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
        keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
        EOF
        ls -la android/keystore

    - name: Build signed release AAB/APK (Dockerized)
      if: github.ref == 'refs/heads/main'
      run: |
        cd android/tools
        ./build-in-docker.sh --task "VERSION_CODE=${{ github.run_number }} VERSION_NAME=${{ github.ref_name }} bundleRelease assembleRelease"

    - name: Upload AAB/APK artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: ai-servis-app-release
        path: |
          android/app/build/outputs/bundle/release/app-release.aab
          android/app/build/outputs/apk/release/app-release.apk

