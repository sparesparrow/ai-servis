name: Build & Deploy AI-SERVIS Variants

on:
  push:
    branches: [main, feature/journalists-audio-autoplay]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  AWS_REGION: eu-north-1
  DOMAIN: ai.sparetools.dev
  S3_BUCKET: ai-sparetools-web
  CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        variant: [business-car, gonzo-car, family-car, dj-car]
        include:
          - variant: business-car
            i18n_file: business
            theme: corporate
          - variant: gonzo-car
            i18n_file: gonzo
            theme: gonzo
          - variant: family-car
            i18n_file: family
            theme: family
          - variant: dj-car
            i18n_file: musicians
            theme: creative

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Python (for i18n processing)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install pyyaml jinja2

      - name: Build variant: ${{ matrix.variant }}
        run: |
          python scripts/build_variant.py ${{ matrix.variant }} ${{ matrix.i18n_file }}
        env:
          VARIANT: ${{ matrix.variant }}
          THEME: ${{ matrix.theme }}
          DOMAIN: ${{ env.DOMAIN }}
          BASE_PATH: /${{ matrix.variant }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync ./dist/${{ matrix.variant }} s3://${{ env.S3_BUCKET }}/${{ matrix.variant }} --delete --exclude "*.DS_Store"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_ID }} \
            --paths "/${{ matrix.variant }}/*"

  verify-deployment:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Verify all endpoints
        run: |
          echo "üîç Verifying deployments..."
          curl -I https://ai.sparetools.dev/business-car/ || echo "‚ùå business-car failed"
          curl -I https://ai.sparetools.dev/gonzo-car/ || echo "‚ùå gonzo-car failed"
          curl -I https://ai.sparetools.dev/family-car/ || echo "‚ùå family-car failed"
          curl -I https://ai.sparetools.dev/dj-car/ || echo "‚ùå dj-car failed"
          echo "‚úÖ Verification complete"

  certificate-management:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          pip install boto3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Update ACM certificate
        run: |
          python scripts/check_and_update_certificates.py ai.sparetools.dev
