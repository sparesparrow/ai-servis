version: '3.8'

services:
  # Core Orchestrator - Development mode with hot reloading
  ai-servis-core:
    build:
      context: ./modules/core-orchestrator
      dockerfile: Dockerfile.dev
    container_name: ai-servis-core-dev
    restart: unless-stopped
    environment:
      - MCP_DISCOVERY_PORT=8080
      - MQTT_BROKER=mqtt-broker:1883
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
      - PYTHON_ENV=development
      - HOT_RELOAD=true
    ports:
      - "8080:8080"
      - "8081:8081"
      - "5678:5678"  # Debugger port
    volumes:
      - ./modules/core-orchestrator:/app:cached
      - ./volumes/core-config:/app/config
      - ./volumes/core-data:/app/data
      - ./logs:/app/logs
    depends_on:
      - mqtt-broker
      - service-discovery
    networks:
      - ai-servis-dev-network

  # Service Discovery - Development
  service-discovery:
    build:
      context: ./modules/service-discovery
      dockerfile: Dockerfile.dev
    container_name: ai-servis-discovery-dev
    restart: unless-stopped
    environment:
      - MQTT_BROKER=mqtt-broker:1883
      - DISCOVERY_PORT=8090
      - LOG_LEVEL=DEBUG
      - HOT_RELOAD=true
    ports:
      - "8090:8090"
      - "5679:5678"  # Debugger port
    volumes:
      - ./modules/service-discovery:/app:cached
      - ./volumes/discovery-data:/app/data
    depends_on:
      - mqtt-broker
    networks:
      - ai-servis-dev-network

  # AI Audio Assistant - Development
  ai-audio-assistant:
    build:
      context: ./modules/ai-audio-assistant
      dockerfile: Dockerfile.dev
    container_name: ai-audio-assistant-dev
    restart: unless-stopped
    environment:
      - MCP_SERVER_PORT=8082
      - MQTT_BROKER=mqtt-broker:1883
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY:-test-key}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID:-test-id}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET:-test-secret}
      - LOG_LEVEL=DEBUG
      - HOT_RELOAD=true
      - PYTHON_ENV=development
    ports:
      - "8082:8082"
      - "5680:5678"  # Debugger port
    volumes:
      - ./modules/ai-audio-assistant:/app:cached
      - ./volumes/audio-config:/app/config
      - /dev/snd:/dev/snd:rw
    devices:
      - /dev/snd
    privileged: true
    depends_on:
      - mqtt-broker
      - service-discovery
    networks:
      - ai-servis-dev-network

  # Linux Platform Controller - Development
  ai-platform-linux:
    build:
      context: ./modules/ai-platform-controllers/linux
      dockerfile: Dockerfile.dev
    container_name: ai-platform-linux-dev
    restart: unless-stopped
    environment:
      - MCP_SERVER_PORT=8083
      - MQTT_BROKER=mqtt-broker:1883
      - TARGET_PLATFORM=linux
      - LOG_LEVEL=DEBUG
      - HOT_RELOAD=true
    ports:
      - "8083:8083"
      - "5681:5678"  # Debugger port
    volumes:
      - ./modules/ai-platform-controllers/linux:/app:cached
      - ./volumes/platform-config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:/usr/bin/docker:ro
    privileged: true
    depends_on:
      - mqtt-broker
      - service-discovery
    networks:
      - ai-servis-dev-network

  # MQTT Broker
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: ai-servis-mqtt-dev
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./containers/mosquitto/mosquitto-dev.conf:/mosquitto/config/mosquitto.conf
      - ./volumes/mqtt-data:/mosquitto/data
      - ./volumes/mqtt-logs:/mosquitto/log
    networks:
      - ai-servis-dev-network

  # PostgreSQL Database - Development
  postgres:
    image: postgres:15-alpine
    container_name: ai-servis-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=aiservisdwxb
      - POSTGRES_USER=aiservispdev
      - POSTGRES_PASSWORD=aiservislicdbdev
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres-data-dev:/var/lib/postgresql/data
      - ./containers/postgres/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-servis-dev-network

  # Redis Cache - Development
  redis:
    image: redis:7-alpine
    container_name: ai-servis-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis-data-dev:/data
    networks:
      - ai-servis-dev-network

  # Development Tools
  mkdocs:
    image: squidfunk/mkdocs-material:latest
    container_name: ai-servis-docs-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/docs:cached
    command: serve --dev-addr=0.0.0.0:8000
    networks:
      - ai-servis-dev-network

networks:
  ai-servis-dev-network:
    driver: bridge

volumes:
  core-config:
  core-data:
  discovery-data:
  audio-config:
  platform-config:
  mqtt-data:
  mqtt-logs:
  postgres-data-dev:
  redis-data-dev:
