---
alwaysApply: true
description: Android APK building and testing best practices and troubleshooting guide
---

# Android APK Building and Testing Guide

## Key Files
- android/Dockerfile - Docker build environment
- android/build.gradle - Top-level Gradle config (Groovy DSL)
- android/app/build.gradle - App-level Gradle config
- android/tools/build-in-docker.sh - Docker build script
- android/tools/validate-apk.sh - APK validation script

## Build Best Practices
- Use Groovy DSL (.gradle) instead of Kotlin DSL (.gradle.kts)
- Enable buildConfig true for BuildConfig generation
- Align versions with reference project (Kotlin 1.9.22, Compose 1.5.8, AGP 8.2.2)
- Use Docker with persistent SDK/Gradle caches
- Set JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64

## Common Issues & Solutions
- Gradle cache: Clear ~/.gradle/caches/transforms-3 and android/.gradle
- BuildConfig: Add buildConfig true to buildFeatures
- Hilt DI: Use @ApplicationContext for Context injection
- Compose: Use androidx.compose.material.icons.Icons

## Testing Workflow
1. Build: ./tools/build-in-docker.sh
2. Validate: ./tools/validate-apk.sh
3. Install: adb install -r app/build/outputs/apk/debug/app-debug.apk
4. Launch: adb shell am start -n package.name/.MainActivity

## Validation Checklist
- APK is valid ZIP archive
- AndroidManifest.xml and classes.dex present
- Resources and assets included
- Native libraries for target architectures
- META-INF signature directory
- No compilation errors
