---
globs: Dockerfile,*.sh
description: Docker-based Android build environment setup and best practices
---

# Docker Android Build Environment

## Dockerfile Best Practices
- Use `ghcr.io/cirruslabs/android-sdk:34` as base image
- Set `JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64` (available in base image)
- Mount persistent volumes for SDK and Gradle caches
- Use `--no-daemon` flag for CI/CD environments

## Build Script Structure
```bash
#!/usr/bin/env bash
set -euo pipefail

IMAGE_NAME=project-android-build:latest
PROJECT_ROOT=$(cd "$(dirname "$0")/.." && pwd)
ANDROID_DIR="$PROJECT_ROOT"
SDK_VOL=project_android_sdk

# Build image
cd "$ANDROID_DIR"
docker build -t "$IMAGE_NAME" .

# Bootstrap SDK
docker run --rm \
  -v $SDK_VOL:/sdk \
  -e ANDROID_HOME=/sdk \
  -e ANDROID_SDK_ROOT=/sdk \
  "$IMAGE_NAME" bash -lc "set -e; \
    sdkmanager --version >/dev/null; \
    yes | sdkmanager --sdk_root=/sdk --licenses >/dev/null; \
    sdkmanager --sdk_root=/sdk 'platform-tools' 'platforms;android-34' 'build-tools;34.0.0' >/dev/null"

# Run build
exec docker run --rm --init \
  -u $(id -u):$(id -g) \
  -v "$ANDROID_DIR":/workspace \
  -v $SDK_VOL:/opt/android-sdk \
  -e ANDROID_HOME=/opt/android-sdk \
  -e ANDROID_SDK_ROOT=/opt/android-sdk \
  -e GRADLE_USER_HOME=/workspace/.gradle \
  -w /workspace \
  "$IMAGE_NAME" ./gradlew --no-daemon assembleDebug
```

## Volume Management
- `SDK_VOL`: Persistent Android SDK installation
- `GRADLE_USER_HOME`: Gradle cache and wrapper
- Project directory: Mounted as `/workspace`

## Environment Variables
- `ANDROID_HOME=/opt/android-sdk`
- `ANDROID_SDK_ROOT=/opt/android-sdk`
- `GRADLE_USER_HOME=/workspace/.gradle`
- `JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64`

## Troubleshooting
- Clear Gradle cache: `rm -rf ~/.gradle/caches/transforms-3`
- Fix permissions: `chown -R $(id -u):$(id -g) /workspace/.gradle`
- Restart ADB server: `adb kill-server && adb start-server`
