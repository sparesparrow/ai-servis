version: '3.8'

services:
  # Raspberry Pi simulation environment
  pi-gateway-sim:
    build:
      context: ./containers/pi-simulation
      dockerfile: Dockerfile
    container_name: ai-servis-pi-sim
    restart: unless-stopped
    environment:
      - PI_SIMULATION=true
      - GPIO_SIMULATION=true
      - MQTT_BROKER=mqtt-broker:1883
      - LOG_LEVEL=DEBUG
      - DEVICE_ID=pi-sim-001
      - HARDWARE_PROFILE=raspberry-pi-4
    ports:
      - "8084:8080"  # Pi Gateway API
      - "8085:8081"  # GPIO Control Interface
      - "8086:8082"  # Hardware Monitoring
    volumes:
      - ./volumes/pi-sim-config:/app/config
      - ./volumes/pi-sim-data:/app/data
      - ./logs/pi-sim:/app/logs
      # Mount GPIO simulation files
      - ./containers/pi-simulation/gpio-sim:/dev/gpiochip0:ro
      - ./containers/pi-simulation/gpio-sim:/dev/gpiochip1:ro
    devices:
      # Simulate hardware devices
      - /dev/null:/dev/i2c-1
      - /dev/null:/dev/spi-0.0
      - /dev/null:/dev/spi-0.1
    privileged: true  # Required for hardware simulation
    depends_on:
      - mqtt-broker
      - gpio-simulator
    networks:
      - ai-servis-pi-network

  # GPIO Hardware Simulator
  gpio-simulator:
    build:
      context: ./containers/gpio-simulator
      dockerfile: Dockerfile
    container_name: ai-servis-gpio-sim
    restart: unless-stopped
    environment:
      - SIMULATION_MODE=raspberry-pi-4
      - GPIO_PINS=40
      - I2C_BUSES=1
      - SPI_BUSES=2
      - LOG_LEVEL=DEBUG
    ports:
      - "9000:9000"  # GPIO Simulator Web UI
      - "9001:9001"  # GPIO Simulator API
    volumes:
      - ./volumes/gpio-sim-state:/app/state
      - ./containers/gpio-simulator/pin-configs:/app/configs
    networks:
      - ai-servis-pi-network

  # ESP32 Device Simulators
  esp32-obd-sim:
    build:
      context: ./containers/esp32-simulator
      dockerfile: Dockerfile
    container_name: ai-servis-esp32-obd-sim
    restart: unless-stopped
    environment:
      - ESP32_VARIANT=obd
      - DEVICE_ID=esp32-obd-001
      - MQTT_BROKER=mqtt-broker:1883
      - SIMULATION_DATA_FILE=/app/data/obd-simulation.json
      - UPDATE_INTERVAL=1000  # 1 second
    volumes:
      - ./containers/esp32-simulator/obd-data:/app/data
    depends_on:
      - mqtt-broker
    networks:
      - ai-servis-pi-network

  esp32-io-sim:
    build:
      context: ./containers/esp32-simulator
      dockerfile: Dockerfile
    container_name: ai-servis-esp32-io-sim
    restart: unless-stopped
    environment:
      - ESP32_VARIANT=io
      - DEVICE_ID=esp32-io-001
      - MQTT_BROKER=mqtt-broker:1883
      - SIMULATION_DATA_FILE=/app/data/io-simulation.json
      - UPDATE_INTERVAL=500   # 0.5 seconds
    volumes:
      - ./containers/esp32-simulator/io-data:/app/data
    depends_on:
      - mqtt-broker
    networks:
      - ai-servis-pi-network

  esp32-cam-sim:
    build:
      context: ./containers/esp32-simulator
      dockerfile: Dockerfile
    container_name: ai-servis-esp32-cam-sim
    restart: unless-stopped
    environment:
      - ESP32_VARIANT=cam
      - DEVICE_ID=esp32-cam-001
      - MQTT_BROKER=mqtt-broker:1883
      - SIMULATION_DATA_FILE=/app/data/cam-simulation.json
      - UPDATE_INTERVAL=2000  # 2 seconds
      - CAMERA_RESOLUTION=640x480
      - CAMERA_FPS=15
    volumes:
      - ./containers/esp32-simulator/cam-data:/app/data
      - ./containers/esp32-simulator/sample-images:/app/images
    depends_on:
      - mqtt-broker
    networks:
      - ai-servis-pi-network

  # Vehicle Data Generator
  vehicle-data-generator:
    build:
      context: ./containers/vehicle-simulator
      dockerfile: Dockerfile
    container_name: ai-servis-vehicle-sim
    restart: unless-stopped
    environment:
      - VEHICLE_PROFILE=sedan
      - DRIVING_SCENARIO=city_driving
      - MQTT_BROKER=mqtt-broker:1883
      - DATA_RATE=1.0  # 1 Hz
      - SIMULATION_SPEED=1.0  # Real-time
    volumes:
      - ./containers/vehicle-simulator/profiles:/app/profiles
      - ./containers/vehicle-simulator/scenarios:/app/scenarios
    depends_on:
      - mqtt-broker
    networks:
      - ai-servis-pi-network

  # Hardware Performance Monitor
  hardware-monitor:
    build:
      context: ./containers/hardware-monitor
      dockerfile: Dockerfile
    container_name: ai-servis-hw-monitor
    restart: unless-stopped
    environment:
      - MONITORING_INTERVAL=5
      - ALERT_THRESHOLDS_CPU=80
      - ALERT_THRESHOLDS_MEMORY=85
      - ALERT_THRESHOLDS_TEMP=70
      - MQTT_BROKER=mqtt-broker:1883
    ports:
      - "8087:8080"  # Hardware Monitor Dashboard
    volumes:
      - ./volumes/hw-monitor-data:/app/data
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    depends_on:
      - mqtt-broker
    networks:
      - ai-servis-pi-network

  # MQTT Broker (shared)
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: ai-servis-mqtt-pi-sim
    restart: unless-stopped
    ports:
      - "1884:1883"  # Different port to avoid conflicts
      - "9002:9001"
    volumes:
      - ./containers/mosquitto/mosquitto-pi-sim.conf:/mosquitto/config/mosquitto.conf
      - ./volumes/mqtt-pi-data:/mosquitto/data
      - ./volumes/mqtt-pi-logs:/mosquitto/log
    networks:
      - ai-servis-pi-network

  # Simulation Control Panel
  simulation-control:
    build:
      context: ./containers/simulation-control
      dockerfile: Dockerfile
    container_name: ai-servis-sim-control
    restart: unless-stopped
    environment:
      - MQTT_BROKER=mqtt-broker:1883
      - REDIS_URL=redis://redis:6379
    ports:
      - "8088:8080"  # Simulation Control Dashboard
    volumes:
      - ./volumes/sim-control-config:/app/config
    depends_on:
      - mqtt-broker
      - redis
    networks:
      - ai-servis-pi-network
      - ai-servis-dev-network  # Connect to main network for Redis

  # Redis for simulation state
  redis:
    image: redis:7-alpine
    container_name: ai-servis-redis-sim
    restart: unless-stopped
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - ./volumes/redis-sim-data:/data
    networks:
      - ai-servis-pi-network
      - ai-servis-dev-network

networks:
  ai-servis-pi-network:
    driver: bridge
  ai-servis-dev-network:
    external: true

volumes:
  pi-sim-config:
  pi-sim-data:
  gpio-sim-state:
  hw-monitor-data:
  mqtt-pi-data:
  mqtt-pi-logs:
  redis-sim-data:
  sim-control-config: